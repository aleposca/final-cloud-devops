apiVersion: v1
data:
  readme.me: |
    Generar los PeersID desde configMap
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: watched-peers
---
apiVersion: v1
kind: Service
metadata:
  name: apm-syncth
  labels:
    run: apm-syncth
spec:
  ports:
  - port: 8384
    protocol: TCP
  selector:
    run: apm-syncth
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: apm-syncth
  labels:
    run: apm-syncth
spec:
  selector:
    matchLabels:
      run: apm-syncth
  serviceName: "apm-syncth"
  template:
    metadata:
      generateName: apm-syncth
      labels:
        run: apm-syncth
    spec:
      initContainers:
      - name: "chown"
        image: "busybox:1.25.0"
        imagePullPolicy: "IfNotPresent"
        command: ["sh", "-c", "chown -R 911:911 /config"]
        volumeMounts:
        - name: sync-data
          mountPath: "/config"
      containers:
        - name: apm-syncth
          image: linuxserver/syncthing
          imagePullPolicy: "IfNotPresent"
          ports:
            - name: apm-syncth
              containerPort: 8384
          volumeMounts:
            - mountPath: "/config/"
              name: sync-data
        - name: apm-watch
          image: "python:3.6-alpine"
          imagePullPolicy: "IfNotPresent"
          command: ["/bin/sh", "-c"]
          args:
          - echo starting...;
            pip install watchdog;
            pip install requests;
            python3 /watcherfiles/watcher.py;
          volumeMounts:
          - name: sync-data
            mountPath: "/config/"
          - name: watcherfiles-vol
            mountPath: "/watcherfiles/"
          - name: watched-peers-vol
            mountPath: "/watched/"
      volumes:
      - configMap:
          name: watcherfiles
          defaultMode: 0775
        name: watcherfiles-vol
      - configMap:
          name: watched-peers
          defaultMode: 0777
        name: watched-peers-vol
  volumeClaimTemplates:
   - metadata:
       name: sync-data
     spec:
       accessModes: [ "ReadWriteOnce" ]
       resources:
         requests:
           storage: 1Gi
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  labels:
    run: apm-syncth
  annotations:
    nginx.ingress.kubernetes.io/auth-signin: https://apmsth.kube.um.edu.ar/oauth2/start
    nginx.ingress.kubernetes.io/auth-url: https://apmsth.kube.um.edu.ar/oauth2/auth
    nginx.ingress.kubernetes.io/lua-resty-waf: "active"
    nginx.ingress.kubernetes.io/rewrite-target: /
    certmanager.k8s.io/acme-challenge-type: http01
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
  name: apm-syncth-ingress
spec:
  rules:
  - host: apmsth.kube.um.edu.ar
    http:
      paths:
      - path: /
        backend:
          serviceName: apm-syncth
          servicePort: 8384
      - path: /oauth2
        backend:
          serviceName: oauth2-proxy
          servicePort: 4180
  tls:
  - hosts:
    - apmsth.kube.um.edu.ar
    secretName: web-cert
